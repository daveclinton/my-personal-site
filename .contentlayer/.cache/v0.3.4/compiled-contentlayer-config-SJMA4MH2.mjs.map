{
  "version": 3,
  "sources": ["../../../contentlayer.config.ts"],
  "sourcesContent": ["import { defineDocumentType, makeSource } from \"contentlayer/source-files\";\n\nconst Post = defineDocumentType(() => ({\n  name: \"Post\",\n  filePathPattern: `posts/**/*.mdx`,\n  contentType: \"mdx\",\n  fields: {\n    title: { type: \"string\", required: true },\n    date: { type: \"date\", required: true },\n    description: { type: \"string\" },\n  },\n  computedFields: {\n    url: {\n      type: \"string\",\n      resolve: (doc) =>\n        `/posts/${doc._raw.flattenedPath.replace(/^posts\\//, \"\")}`,\n    },\n  },\n}));\n\nconst Projects = defineDocumentType(() => ({\n  name: \"Project\",\n  filePathPattern: `projects/**/*.mdx`,\n  contentType: \"mdx\",\n  fields: {\n    title: {\n      type: \"string\",\n      description: \"The title of the project\",\n      required: true,\n    },\n    description: {\n      type: \"string\",\n      description: \"A brief description of the project\",\n      required: true,\n    },\n    technologies: {\n      type: \"list\",\n      of: { type: \"string\" },\n      required: true,\n      description: \"List of technologies used in the project\",\n    },\n    link: {\n      type: \"string\",\n      description: \"The link of the project\",\n      required: true,\n    },\n    status: {\n      type: \"enum\",\n      options: [\"In Progress\", \"Completed\", \"On Hold\"],\n      default: \"In Progress\",\n    },\n  },\n  computedFields: {\n    url: {\n      type: \"string\",\n      resolve: (doc) => `/posts/${doc._raw.flattenedPath}`,\n    },\n  },\n}));\nconst Home = defineDocumentType(() => ({\n  name: \"Home\",\n  filePathPattern: `home/**/*.mdx`,\n  contentType: \"mdx\",\n  fields: {\n    title: { type: \"string\", required: true },\n    date: { type: \"date\", required: true },\n    description: { type: \"string\" },\n  },\n  computedFields: {\n    url: {\n      type: \"string\",\n      resolve: (doc) =>\n        `/posts/${doc._raw.flattenedPath.replace(/^posts\\//, \"\")}`,\n    },\n  },\n}));\n\nexport default makeSource({\n  contentDirPath: \"data\",\n  documentTypes: [Post, Projects, Home],\n});\n"],
  "mappings": ";AAAA,SAAS,oBAAoB,kBAAkB;AAE/C,IAAM,OAAO,mBAAmB,OAAO;AAAA,EACrC,MAAM;AAAA,EACN,iBAAiB;AAAA,EACjB,aAAa;AAAA,EACb,QAAQ;AAAA,IACN,OAAO,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IACxC,MAAM,EAAE,MAAM,QAAQ,UAAU,KAAK;AAAA,IACrC,aAAa,EAAE,MAAM,SAAS;AAAA,EAChC;AAAA,EACA,gBAAgB;AAAA,IACd,KAAK;AAAA,MACH,MAAM;AAAA,MACN,SAAS,CAAC,QACR,UAAU,IAAI,KAAK,cAAc,QAAQ,YAAY,EAAE;AAAA,IAC3D;AAAA,EACF;AACF,EAAE;AAEF,IAAM,WAAW,mBAAmB,OAAO;AAAA,EACzC,MAAM;AAAA,EACN,iBAAiB;AAAA,EACjB,aAAa;AAAA,EACb,QAAQ;AAAA,IACN,OAAO;AAAA,MACL,MAAM;AAAA,MACN,aAAa;AAAA,MACb,UAAU;AAAA,IACZ;AAAA,IACA,aAAa;AAAA,MACX,MAAM;AAAA,MACN,aAAa;AAAA,MACb,UAAU;AAAA,IACZ;AAAA,IACA,cAAc;AAAA,MACZ,MAAM;AAAA,MACN,IAAI,EAAE,MAAM,SAAS;AAAA,MACrB,UAAU;AAAA,MACV,aAAa;AAAA,IACf;AAAA,IACA,MAAM;AAAA,MACJ,MAAM;AAAA,MACN,aAAa;AAAA,MACb,UAAU;AAAA,IACZ;AAAA,IACA,QAAQ;AAAA,MACN,MAAM;AAAA,MACN,SAAS,CAAC,eAAe,aAAa,SAAS;AAAA,MAC/C,SAAS;AAAA,IACX;AAAA,EACF;AAAA,EACA,gBAAgB;AAAA,IACd,KAAK;AAAA,MACH,MAAM;AAAA,MACN,SAAS,CAAC,QAAQ,UAAU,IAAI,KAAK;AAAA,IACvC;AAAA,EACF;AACF,EAAE;AACF,IAAM,OAAO,mBAAmB,OAAO;AAAA,EACrC,MAAM;AAAA,EACN,iBAAiB;AAAA,EACjB,aAAa;AAAA,EACb,QAAQ;AAAA,IACN,OAAO,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IACxC,MAAM,EAAE,MAAM,QAAQ,UAAU,KAAK;AAAA,IACrC,aAAa,EAAE,MAAM,SAAS;AAAA,EAChC;AAAA,EACA,gBAAgB;AAAA,IACd,KAAK;AAAA,MACH,MAAM;AAAA,MACN,SAAS,CAAC,QACR,UAAU,IAAI,KAAK,cAAc,QAAQ,YAAY,EAAE;AAAA,IAC3D;AAAA,EACF;AACF,EAAE;AAEF,IAAO,8BAAQ,WAAW;AAAA,EACxB,gBAAgB;AAAA,EAChB,eAAe,CAAC,MAAM,UAAU,IAAI;AACtC,CAAC;",
  "names": []
}
